<?xml version="1.0" encoding="utf-8" ?>
<DesignPattern name="SingletonMultithreaded" type="Singleton">
  <Parameters>
    <Parameter name="{NAMESPACE}" description="Namespace" />
    <Parameter name="{CLASS_NAME}" description="Class Name" />
  </Parameters>
  <Pattern>
    <File>
      <Name>
        <![CDATA[
        {CLASS_NAME}
        ]]>
      </Name>
      <Extension>
        .cs
      </Extension>
      <Implementation>
    <![CDATA[
using System;

namespace {NAMESPACE}
{
  public sealed class {CLASS_NAME}
  {
    private static volatile {CLASS_NAME} _instance;
    private static object syncRoot = new Object();

    private {CLASS_NAME}() {}

    public static {CLASS_NAME} Instance
    {
      get 
      {
          if (_instance == null) 
          {
            lock (syncRoot) 
            {
                if (_instance == null) 
                  _instance = new {CLASS_NAME}();
            }
          }

          return _instance;
      }
    }
  }
}
  ]]>
      </Implementation>
    </File>
  </Pattern>
</DesignPattern>