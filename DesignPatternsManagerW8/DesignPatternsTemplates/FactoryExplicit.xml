<?xml version="1.0" encoding="utf-8" ?>
<DesignPattern name="Factory Explicit" type="Factory">
  <Description>
    <![CDATA[
      Define an interface for creating an object, but let the classes that implement the interface decide which class to instantiate. The Factory method lets a class defer instantiation to subclasses.
      The explicit factory defines a method for each of the child classes that implements the interface.
    ]]>
  </Description>
  <Parameters>
    <Parameter name="{NAMESPACE}" description="Namespace" multiple="false" />
    <Parameter name="{PARENT_OBJECT}" description="Parent Object" multiple="false" />
    <Parameter name="{OBJECT}" description="Child Objects" multiple="true" />
  </Parameters>
  <Pattern>
    <File>
      <Name>
        <![CDATA[
          I{PARENT_OBJECT}Factory
        ]]>
      </Name>
      <Extension>
        .cs
      </Extension>
      <Implementation>
        <![CDATA[
          namespace {NAMESPACE}
          {
              public interface I{PARENT_OBJECT}Factory
              {
                  {FACTORY_METHODS}
              }
          }
        ]]>
      </Implementation>
      <MultiTemplate name="{FACTORY_METHODS}" bind="{OBJECT}">
        <![CDATA[
          I{PARENT_OBJECT} Make{OBJECT}();
        ]]>
      </MultiTemplate>
    </File>
    <File>
      <Name>
        <![CDATA[
          I{PARENT_OBJECT}
        ]]>
      </Name>
      <Extension>
        .cs
      </Extension>
      <Implementation>
        <![CDATA[
        namespace {NAMESPACE}
        {
            public interface I{PARENT_OBJECT}
            {
            }
        }
        ]]>
      </Implementation>
    </File>
    <File>
      <Name>
        <![CDATA[
          {PARENT_OBJECT}Factory
        ]]>
      </Name>
      <Extension>
        .cs
      </Extension>
      <Implementation>
        <![CDATA[
        namespace {NAMESPACE}
        {
            public class {PARENT_OBJECT}Factory : I{PARENT_OBJECT}Factory
            {
                {FACTORY_IMPLEMENTATION}
            }
        }
        ]]>
      </Implementation>
      <MultiTemplate name="{FACTORY_IMPLEMENTATION}" bind="{OBJECT}">
        <![CDATA[
          public I{PARENT_OBJECT} Make{OBJECT}()
          {
              return new {OBJECT}();
          }
        ]]>
      </MultiTemplate>
    </File>
    <File type="Multiple" bind="{OBJECT}">
      <Name>
        <![CDATA[
          {OBJECT}
        ]]>
      </Name>
      <Extension>
        .cs
      </Extension>
      <Implementation>
        <![CDATA[
        namespace {NAMESPACE}
        {
            public class {OBJECT} : I{PARENT_OBJECT}
            {
                public {OBJECT}()
                {
                
                }
            }
        }
        ]]>
      </Implementation>
    </File>
  </Pattern>
</DesignPattern>